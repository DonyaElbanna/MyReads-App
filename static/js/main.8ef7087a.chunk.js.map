{"version":3,"sources":["BooksAPI.js","Book.js","SearchPage.js","MainPage.js","App.js","index.js"],"names":["api","token","localStorage","Math","random","toString","substr","headers","Accept","Authorization","update","book","shelf","fetch","concat","id","method","Object","objectSpread","Content-Type","body","JSON","stringify","then","res","json","search","query","data","books","Book","_this$props","this","props","moveBook","bookCover","imageLinks","thumbnail","react_default","a","createElement","className","style","width","height","backgroundImage","value","onChange","event","target","disabled","title","authors","Component","SearchPage","state","displayedBooks","updateQuery","_this","setState","displayBooks","BooksAPI","error","_this2","_this$state","react_router_dom","to","type","placeholder","map","displayedBook","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","err","return","key","src_Book","MainPage","filter","BooksApp","movedBook","newShelf","getBooks","_this3","react_router","exact","path","render","src_MainPage","src_SearchPage","React","ReactDOM","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.8ef7087a.chunk.js","sourcesContent":["\nconst api = \"https://reactnd-books-api.udacity.com\"\n\n\n// Generate a unique token for storing your bookshelf data on the backend server.\nlet token = localStorage.token\nif (!token)\n  token = localStorage.token = Math.random().toString(36).substr(-8)\n\nconst headers = {\n  'Accept': 'application/json',\n  'Authorization': token\n}\n\nexport const get = (bookId) =>\n  fetch(`${api}/books/${bookId}`, { headers })\n    .then(res => res.json())\n    .then(data => data.book)\n\nexport const getAll = () =>\n  fetch(`${api}/books`, { headers })\n    .then(res => res.json())\n    .then(data => data.books)\n\nexport const update = (book, shelf) =>\n  fetch(`${api}/books/${book.id}`, {\n    method: 'PUT',\n    headers: {\n      ...headers,\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({ shelf })\n  }).then(res => res.json())\n\nexport const search = (query) =>\n  fetch(`${api}/search`, {\n    method: 'POST',\n    headers: {\n      ...headers,\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({ query })\n  }).then(res => res.json())\n    .then(data => data.books)\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\n\nclass Book extends Component {\n  static propTypes = {\n    book: PropTypes.object.isRequired,\n    moveBook: PropTypes.func.isRequired,\n  };\n\n  render() {\n    const { book, shelf, moveBook } = this.props;\n    let bookCover = book.imageLinks;\n    if (bookCover) {\n      bookCover = book.imageLinks.thumbnail;\n    } else {\n      bookCover = \"\";\n    }\n\n    return (\n      <div className=\"book\">\n        <div className=\"book-top\">\n          <div\n            className=\"book-cover\"\n            style={{\n              width: 128,\n              height: 192,\n              backgroundImage: `url('${bookCover}')`,\n            }}\n          />\n          <div className=\"book-shelf-changer\">\n            <select\n              value={shelf}\n              onChange={(event) => moveBook(book, event.target.value)}\n            >\n              <option value=\"move\" disabled>\n                Move to...\n              </option>\n              <option value=\"currentlyReading\">Currently Reading</option>\n              <option value=\"wantToRead\">Want to Read</option>\n              <option value=\"read\">Read</option>\n              <option value=\"none\">None</option>\n            </select>\n          </div>\n        </div>\n        <div className=\"book-title\">{book.title}</div>\n        <div className=\"book-authors\">{book.authors}</div>\n      </div>\n    );\n  }\n}\n\nexport default Book;\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\nimport * as BooksAPI from \"./BooksAPI\";\nimport Book from \"./Book\";\n\nclass SearchPage extends Component {\n  static propTypes = {\n    books: PropTypes.array.isRequired,\n    moveBook: PropTypes.func.isRequired,\n  };\n\n  state = {\n    query: \"\",\n    displayedBooks: [],\n  };\n\n  updateQuery = (query) => {\n    this.setState({ query });\n    this.displayBooks(query);\n  };\n\n  displayBooks = (query) => {\n    if (query !== \"\") {\n      BooksAPI.search(query).then((displayedBooks) => {\n        if (displayedBooks.error) {\n          this.setState({ displayedBooks: [] });\n        } else {\n          this.setState({ displayedBooks: displayedBooks });\n        }\n      });\n    } else {\n      this.setState({ displayedBooks: [] });\n    }\n  };\n  render() {\n    const { query, displayedBooks } = this.state;\n    const { books, moveBook } = this.props;\n\n    return (\n      <div className=\"search-books\">\n        <div className=\"search-books-bar\">\n          <Link to=\"/\" className=\"close-search\">\n            Close\n          </Link>\n          <div className=\"search-books-input-wrapper\">\n            <input\n              type=\"text\"\n              placeholder=\"Search by title or author\"\n              value={query}\n              onChange={(event) => this.updateQuery(event.target.value)}\n            />\n          </div>\n        </div>\n        <div className=\"search-books-results\">\n          <ol className=\"books-grid\">\n            {displayedBooks.map((displayedBook) => {\n              let shelf = \"none\";\n              for (let book of books) {\n                if (book.id === displayedBook.id) {\n                  shelf = book.shelf;\n                } else {\n                  displayedBook.shelf = \"none\";\n                }\n              }\n\n              return (\n                <li key={displayedBook.id}>\n                  <Book\n                    book={displayedBook}\n                    moveBook={moveBook}\n                    shelf={shelf}\n                  />\n                </li>\n              );\n            })}\n          </ol>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default SearchPage;\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\nimport Book from \"./Book\";\n\nclass MainPage extends Component {\n  static propTypes = {\n    books: PropTypes.array.isRequired,\n    moveBook: PropTypes.func.isRequired,\n  };\n\n  render() {\n    const { books, moveBook } = this.props;\n\n    return (\n      <div className=\"list-books\">\n        <div className=\"list-books-title\">\n          <h1>MyReads</h1>\n        </div>\n        <div className=\"list-books-content\">\n          <div>\n            <div className=\"bookshelf\">\n              <h2 className=\"bookshelf-title\">Currently Reading</h2>\n              <div className=\"bookshelf-books\">\n                <ol className=\"books-grid\">\n                  {books\n                    .filter((book) => book.shelf === \"currentlyReading\")\n                    .map((book) => (\n                      <li key={book.id}>\n                        <Book\n                          book={book}\n                          moveBook={moveBook}\n                          shelf=\"currentlyReading\"\n                        />\n                      </li>\n                    ))}\n                </ol>\n              </div>\n            </div>\n            <div className=\"bookshelf\">\n              <h2 className=\"bookshelf-title\">Want to Read</h2>\n              <div className=\"bookshelf-books\">\n                <ol className=\"books-grid\">\n                  {books\n                    .filter((book) => book.shelf === \"wantToRead\")\n                    .map((book) => (\n                      <li key={book.id}>\n                        <Book\n                          book={book}\n                          moveBook={moveBook}\n                          shelf=\"wantToRead\"\n                        />\n                      </li>\n                    ))}\n                </ol>\n              </div>\n            </div>\n            <div className=\"bookshelf\">\n              <h2 className=\"bookshelf-title\">Read</h2>\n              <div className=\"bookshelf-books\">\n                <ol className=\"books-grid\">\n                  {books\n                    .filter((book) => book.shelf === \"read\")\n                    .map((book) => (\n                      <li key={book.id}>\n                        <Book book={book} moveBook={moveBook} shelf=\"read\" />\n                      </li>\n                    ))}\n                </ol>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div className=\"open-search\">\n          <Link to=\"/search\">Add a book</Link>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default MainPage;\n","import React from \"react\";\nimport { Route } from \"react-router-dom\";\nimport * as BooksAPI from \"./BooksAPI\";\nimport \"./App.css\";\nimport SearchPage from \"./SearchPage\";\nimport MainPage from \"./MainPage\";\n\nclass BooksApp extends React.Component {\n  state = {\n    books: [],\n  };\n\n  getBooks() {\n    BooksAPI.getAll().then((books) => {\n      this.setState({ books });\n    });\n  }\n\n  componentDidMount() {\n    this.getBooks();\n  }\n\n  //moveBook func is inside main comp to be invoked here to alter the state\n  moveBook = (movedBook, newShelf) => {\n    BooksAPI.update(movedBook, newShelf).then(() => {\n      this.getBooks();\n    });\n  };\n\n  render() {\n    const { books } = this.state;\n\n    return (\n      <div className=\"app\">\n        <Route\n          exact\n          path=\"/\"\n          render={() => <MainPage books={books} moveBook={this.moveBook} />}\n        />\n        <Route\n          path=\"/search\"\n          render={() => <SearchPage books={books} moveBook={this.moveBook} />}\n        />\n      </div>\n    );\n  }\n}\n\nexport default BooksApp;\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { HashRouter } from 'react-router-dom'\nimport App from './App'\nimport './index.css'\n\nReactDOM.render(<HashRouter> \n<App />\n </HashRouter>, document.getElementById('root'))\n"],"sourceRoot":""}